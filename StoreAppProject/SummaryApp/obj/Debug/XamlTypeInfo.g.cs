//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace SummaryApp
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::SummaryApp.SummaryApp_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.String fullName)
        {
            if(_provider == null)
            {
                _provider = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace SummaryApp.SummaryApp_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            string standardName;
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            if(_xamlTypeToStandardName.TryGetValue(type, out standardName))
            {
                xamlType = GetXamlTypeByName(standardName);
            }
            else
            {
                xamlType = GetXamlTypeByName(type.FullName);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (global::System.String.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypes.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            xamlType = CreateXamlType(typeName);
            if (xamlType != null)
            {
                _xamlTypes.Add(typeName, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (global::System.String.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType> _xamlTypes = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();
        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember> _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();
        global::System.Collections.Generic.Dictionary<global::System.Type, string> _xamlTypeToStandardName = new global::System.Collections.Generic.Dictionary<global::System.Type, string>();

        private void AddToMapOfTypeToStandardName(global::System.Type t, global::System.String str)
        {
            if(!_xamlTypeToStandardName.ContainsKey(t))
            {
                _xamlTypeToStandardName.Add(t, str);
            }
        }

        private object Activate_0_LayoutAwarePage() { return new global::SummaryApp.Common.LayoutAwarePage(); }

        private object Activate_1_AgendaVM() { return new global::SummaryApp.ViewModels.AgendaVM(); }

        private object Activate_2_ObservableObject() { return new global::SummaryApp.ViewModels.ObservableObject(); }

        private object Activate_3_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.LineUp>(); }

        private object Activate_4_Collection() { return new global::System.Collections.ObjectModel.Collection<global::StoreAppPortLibrary.LineUp>(); }

        private object Activate_5_LineUp() { return new global::StoreAppPortLibrary.LineUp(); }

        private object Activate_8_Stage() { return new global::StoreAppPortLibrary.Stage(); }

        private object Activate_9_ObservableObject() { return new global::StoreAppPortLibrary.ObservableObject(); }

        private object Activate_10_Band() { return new global::StoreAppPortLibrary.Band(); }

        private object Activate_11_Agenda() { return new global::SummaryApp.Agenda(); }

        private object Activate_12_GenresVM() { return new global::SummaryApp.ViewModels.GenresVM(); }

        private object Activate_13_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.Genre>(); }

        private object Activate_14_Collection() { return new global::System.Collections.ObjectModel.Collection<global::StoreAppPortLibrary.Genre>(); }

        private object Activate_15_Genre() { return new global::StoreAppPortLibrary.Genre(); }

        private object Activate_16_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.Band>(); }

        private object Activate_17_Collection() { return new global::System.Collections.ObjectModel.Collection<global::StoreAppPortLibrary.Band>(); }

        private object Activate_21_List() { return new global::System.Collections.Generic.List<global::StoreAppPortLibrary.Genre>(); }

        private object Activate_22_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.BandGenre>(); }

        private object Activate_23_Collection() { return new global::System.Collections.ObjectModel.Collection<global::StoreAppPortLibrary.BandGenre>(); }

        private object Activate_24_BandGenre() { return new global::StoreAppPortLibrary.BandGenre(); }

        private object Activate_25_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::System.String>(); }

        private object Activate_26_Collection() { return new global::System.Collections.ObjectModel.Collection<global::System.String>(); }

        private object Activate_27_ByteToImageConverter() { return new global::SummaryApp.Models.ByteToImageConverter(); }

        private object Activate_28_Page2() { return new global::SummaryApp.Page2(); }

        private object Activate_29_LineupVM() { return new global::SummaryApp.ViewModels.LineupVM(); }

        private object Activate_30_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.Stage>(); }

        private object Activate_31_Collection() { return new global::System.Collections.ObjectModel.Collection<global::StoreAppPortLibrary.Stage>(); }

        private object Activate_32_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::System.DateTime>(); }

        private object Activate_33_Collection() { return new global::System.Collections.ObjectModel.Collection<global::System.DateTime>(); }

        private object Activate_38_Page3() { return new global::SummaryApp.Page3(); }

        private void VectorAdd_3_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::StoreAppPortLibrary.LineUp>)instance;
            var newItem = (global::StoreAppPortLibrary.LineUp)item;
            collection.Add(newItem);
        }

        private void VectorAdd_4_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::StoreAppPortLibrary.LineUp>)instance;
            var newItem = (global::StoreAppPortLibrary.LineUp)item;
            collection.Add(newItem);
        }

        private void VectorAdd_13_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::StoreAppPortLibrary.Genre>)instance;
            var newItem = (global::StoreAppPortLibrary.Genre)item;
            collection.Add(newItem);
        }

        private void VectorAdd_14_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::StoreAppPortLibrary.Genre>)instance;
            var newItem = (global::StoreAppPortLibrary.Genre)item;
            collection.Add(newItem);
        }

        private void VectorAdd_16_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::StoreAppPortLibrary.Band>)instance;
            var newItem = (global::StoreAppPortLibrary.Band)item;
            collection.Add(newItem);
        }

        private void VectorAdd_17_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::StoreAppPortLibrary.Band>)instance;
            var newItem = (global::StoreAppPortLibrary.Band)item;
            collection.Add(newItem);
        }

        private void VectorAdd_21_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::StoreAppPortLibrary.Genre>)instance;
            var newItem = (global::StoreAppPortLibrary.Genre)item;
            collection.Add(newItem);
        }

        private void VectorAdd_22_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::StoreAppPortLibrary.BandGenre>)instance;
            var newItem = (global::StoreAppPortLibrary.BandGenre)item;
            collection.Add(newItem);
        }

        private void VectorAdd_23_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::StoreAppPortLibrary.BandGenre>)instance;
            var newItem = (global::StoreAppPortLibrary.BandGenre)item;
            collection.Add(newItem);
        }

        private void VectorAdd_25_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.String>)instance;
            var newItem = (global::System.String)item;
            collection.Add(newItem);
        }

        private void VectorAdd_26_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.String>)instance;
            var newItem = (global::System.String)item;
            collection.Add(newItem);
        }

        private void VectorAdd_30_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::StoreAppPortLibrary.Stage>)instance;
            var newItem = (global::StoreAppPortLibrary.Stage)item;
            collection.Add(newItem);
        }

        private void VectorAdd_31_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::StoreAppPortLibrary.Stage>)instance;
            var newItem = (global::StoreAppPortLibrary.Stage)item;
            collection.Add(newItem);
        }

        private void VectorAdd_32_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.DateTime>)instance;
            var newItem = (global::System.DateTime)item;
            collection.Add(newItem);
        }

        private void VectorAdd_33_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.DateTime>)instance;
            var newItem = (global::System.DateTime)item;
            collection.Add(newItem);
        }


        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(string typeName)
        {
            global::SummaryApp.SummaryApp_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType userType;

            switch (typeName)
            {
            case "Windows.UI.Xaml.Controls.Page":
                xamlType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Controls.Page));
                break;

            case "Windows.UI.Xaml.Controls.UserControl":
                xamlType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Controls.UserControl));
                break;

            case "Object":
                xamlType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::System.Object));
                break;

            case "Int32":
                xamlType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::System.Int32));
                break;

            case "String":
                xamlType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::System.String));
                break;

            case "Windows.UI.Xaml.Controls.Image":
                xamlType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Controls.Image));
                break;

            case "Int64":
                xamlType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::System.Int64));
                break;

            case "SummaryApp.Common.LayoutAwarePage":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::SummaryApp.Common.LayoutAwarePage), GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_0_LayoutAwarePage;
                xamlType = userType;
                break;

            case "SummaryApp.ViewModels.AgendaVM":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::SummaryApp.ViewModels.AgendaVM), GetXamlTypeByName("SummaryApp.ViewModels.ObservableObject"));
                userType.Activator = Activate_1_AgendaVM;
                userType.AddMemberName("LineUpList");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.LineUp>),
                                                   "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.LineUp>");
                userType.AddMemberName("SelectedLineUp");
                xamlType = userType;
                break;

            case "SummaryApp.ViewModels.ObservableObject":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::SummaryApp.ViewModels.ObservableObject), GetXamlTypeByName("Object"));
                userType.Activator = Activate_2_ObservableObject;
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.LineUp>":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.LineUp>), GetXamlTypeByName("System.Collections.ObjectModel.Collection<StoreAppPortLibrary.LineUp>"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.LineUp>),
                                                   "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.LineUp>");
                userType.Activator = Activate_3_ObservableCollection;
                userType.CollectionAdd = VectorAdd_3_ObservableCollection;
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.Collection<StoreAppPortLibrary.LineUp>":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.Collection<global::StoreAppPortLibrary.LineUp>), GetXamlTypeByName("Object"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.Collection<global::StoreAppPortLibrary.LineUp>),
                                                   "System.Collections.ObjectModel.Collection<StoreAppPortLibrary.LineUp>");
                userType.Activator = Activate_4_Collection;
                userType.CollectionAdd = VectorAdd_4_Collection;
                xamlType = userType;
                break;

            case "StoreAppPortLibrary.LineUp":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::StoreAppPortLibrary.LineUp), GetXamlTypeByName("Object"));
                userType.Activator = Activate_5_LineUp;
                userType.AddMemberName("ID");
                AddToMapOfTypeToStandardName(typeof(global::System.Int32),
                                                   "Int32");
                userType.AddMemberName("Date");
                userType.AddMemberName("From");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("Until");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("Stage");
                userType.AddMemberName("Band");
                xamlType = userType;
                break;

            case "System.DateTime":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.DateTime), GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("Date");
                userType.AddMemberName("Day");
                AddToMapOfTypeToStandardName(typeof(global::System.Int32),
                                                   "Int32");
                userType.AddMemberName("DayOfWeek");
                userType.AddMemberName("DayOfYear");
                AddToMapOfTypeToStandardName(typeof(global::System.Int32),
                                                   "Int32");
                userType.AddMemberName("Hour");
                AddToMapOfTypeToStandardName(typeof(global::System.Int32),
                                                   "Int32");
                userType.AddMemberName("Kind");
                userType.AddMemberName("Millisecond");
                AddToMapOfTypeToStandardName(typeof(global::System.Int32),
                                                   "Int32");
                userType.AddMemberName("Minute");
                AddToMapOfTypeToStandardName(typeof(global::System.Int32),
                                                   "Int32");
                userType.AddMemberName("Month");
                AddToMapOfTypeToStandardName(typeof(global::System.Int32),
                                                   "Int32");
                userType.AddMemberName("Second");
                AddToMapOfTypeToStandardName(typeof(global::System.Int32),
                                                   "Int32");
                userType.AddMemberName("Ticks");
                AddToMapOfTypeToStandardName(typeof(global::System.Int64),
                                                   "Int64");
                userType.AddMemberName("TimeOfDay");
                AddToMapOfTypeToStandardName(typeof(global::System.TimeSpan),
                                                   "TimeSpan");
                userType.AddMemberName("Year");
                AddToMapOfTypeToStandardName(typeof(global::System.Int32),
                                                   "Int32");
                xamlType = userType;
                break;

            case "System.ValueType":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.ValueType), GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case "StoreAppPortLibrary.Stage":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::StoreAppPortLibrary.Stage), GetXamlTypeByName("StoreAppPortLibrary.ObservableObject"));
                userType.Activator = Activate_8_Stage;
                userType.AddMemberName("ID");
                AddToMapOfTypeToStandardName(typeof(global::System.Int32),
                                                   "Int32");
                userType.AddMemberName("Name");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("StageLineup");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.LineUp>),
                                                   "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.LineUp>");
                xamlType = userType;
                break;

            case "StoreAppPortLibrary.ObservableObject":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::StoreAppPortLibrary.ObservableObject), GetXamlTypeByName("Object"));
                userType.Activator = Activate_9_ObservableObject;
                xamlType = userType;
                break;

            case "StoreAppPortLibrary.Band":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::StoreAppPortLibrary.Band), GetXamlTypeByName("Object"));
                userType.Activator = Activate_10_Band;
                userType.AddMemberName("ID");
                AddToMapOfTypeToStandardName(typeof(global::System.Int32),
                                                   "Int32");
                userType.AddMemberName("Name");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("Picture");
                AddToMapOfTypeToStandardName(typeof(global::System.Byte[]),
                                                   "Byte[]");
                userType.AddMemberName("Description");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("Twitter");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("Facebook");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("Genres");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.Generic.List<global::StoreAppPortLibrary.Genre>),
                                                   "System.Collections.Generic.List<StoreAppPortLibrary.Genre>");
                userType.AddMemberName("GenresInText");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                xamlType = userType;
                break;

            case "SummaryApp.Agenda":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::SummaryApp.Agenda), GetXamlTypeByName("SummaryApp.Common.LayoutAwarePage"));
                userType.Activator = Activate_11_Agenda;
                xamlType = userType;
                break;

            case "SummaryApp.ViewModels.GenresVM":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::SummaryApp.ViewModels.GenresVM), GetXamlTypeByName("SummaryApp.ViewModels.ObservableObject"));
                userType.Activator = Activate_12_GenresVM;
                userType.AddMemberName("GenreList");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.Genre>),
                                                   "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.Genre>");
                userType.AddMemberName("BandList");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.Band>),
                                                   "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.Band>");
                userType.AddMemberName("SelectedGenre");
                userType.AddMemberName("SelectedBand");
                userType.AddMemberName("SelectedPhoto");
                userType.AddMemberName("FilteredBands");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.Band>),
                                                   "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.Band>");
                userType.AddMemberName("BandIDsForGenreList");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.BandGenre>),
                                                   "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.BandGenre>");
                userType.AddMemberName("Links");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::System.String>),
                                                   "System.Collections.ObjectModel.ObservableCollection<String>");
                userType.AddMemberName("FilteredLineUps");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.LineUp>),
                                                   "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.LineUp>");
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.Genre>":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.Genre>), GetXamlTypeByName("System.Collections.ObjectModel.Collection<StoreAppPortLibrary.Genre>"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.Genre>),
                                                   "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.Genre>");
                userType.Activator = Activate_13_ObservableCollection;
                userType.CollectionAdd = VectorAdd_13_ObservableCollection;
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.Collection<StoreAppPortLibrary.Genre>":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.Collection<global::StoreAppPortLibrary.Genre>), GetXamlTypeByName("Object"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.Collection<global::StoreAppPortLibrary.Genre>),
                                                   "System.Collections.ObjectModel.Collection<StoreAppPortLibrary.Genre>");
                userType.Activator = Activate_14_Collection;
                userType.CollectionAdd = VectorAdd_14_Collection;
                xamlType = userType;
                break;

            case "StoreAppPortLibrary.Genre":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::StoreAppPortLibrary.Genre), GetXamlTypeByName("Object"));
                userType.Activator = Activate_15_Genre;
                userType.AddMemberName("ID");
                AddToMapOfTypeToStandardName(typeof(global::System.Int32),
                                                   "Int32");
                userType.AddMemberName("Name");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.Band>":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.Band>), GetXamlTypeByName("System.Collections.ObjectModel.Collection<StoreAppPortLibrary.Band>"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.Band>),
                                                   "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.Band>");
                userType.Activator = Activate_16_ObservableCollection;
                userType.CollectionAdd = VectorAdd_16_ObservableCollection;
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.Collection<StoreAppPortLibrary.Band>":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.Collection<global::StoreAppPortLibrary.Band>), GetXamlTypeByName("Object"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.Collection<global::StoreAppPortLibrary.Band>),
                                                   "System.Collections.ObjectModel.Collection<StoreAppPortLibrary.Band>");
                userType.Activator = Activate_17_Collection;
                userType.CollectionAdd = VectorAdd_17_Collection;
                xamlType = userType;
                break;

            case "Byte[]":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Byte[]), GetXamlTypeByName("System.Array"));
                AddToMapOfTypeToStandardName(typeof(global::System.Byte[]),
                                                   "Byte[]");
                xamlType = userType;
                break;

            case "System.Array":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Array), GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case "Byte":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Byte), GetXamlTypeByName("System.ValueType"));
                AddToMapOfTypeToStandardName(typeof(global::System.Byte),
                                                   "Byte");
                xamlType = userType;
                break;

            case "System.Collections.Generic.List<StoreAppPortLibrary.Genre>":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.Generic.List<global::StoreAppPortLibrary.Genre>), GetXamlTypeByName("Object"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.Generic.List<global::StoreAppPortLibrary.Genre>),
                                                   "System.Collections.Generic.List<StoreAppPortLibrary.Genre>");
                userType.Activator = Activate_21_List;
                userType.CollectionAdd = VectorAdd_21_List;
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.BandGenre>":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.BandGenre>), GetXamlTypeByName("System.Collections.ObjectModel.Collection<StoreAppPortLibrary.BandGenre>"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.BandGenre>),
                                                   "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.BandGenre>");
                userType.Activator = Activate_22_ObservableCollection;
                userType.CollectionAdd = VectorAdd_22_ObservableCollection;
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.Collection<StoreAppPortLibrary.BandGenre>":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.Collection<global::StoreAppPortLibrary.BandGenre>), GetXamlTypeByName("Object"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.Collection<global::StoreAppPortLibrary.BandGenre>),
                                                   "System.Collections.ObjectModel.Collection<StoreAppPortLibrary.BandGenre>");
                userType.Activator = Activate_23_Collection;
                userType.CollectionAdd = VectorAdd_23_Collection;
                xamlType = userType;
                break;

            case "StoreAppPortLibrary.BandGenre":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::StoreAppPortLibrary.BandGenre), GetXamlTypeByName("Object"));
                userType.Activator = Activate_24_BandGenre;
                userType.AddMemberName("ID");
                AddToMapOfTypeToStandardName(typeof(global::System.Int32),
                                                   "Int32");
                userType.AddMemberName("Genre");
                AddToMapOfTypeToStandardName(typeof(global::System.Int32),
                                                   "Int32");
                userType.AddMemberName("Band");
                AddToMapOfTypeToStandardName(typeof(global::System.Int32),
                                                   "Int32");
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.ObservableCollection<String>":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.ObservableCollection<global::System.String>), GetXamlTypeByName("System.Collections.ObjectModel.Collection<String>"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::System.String>),
                                                   "System.Collections.ObjectModel.ObservableCollection<String>");
                userType.Activator = Activate_25_ObservableCollection;
                userType.CollectionAdd = VectorAdd_25_ObservableCollection;
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.Collection<String>":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.Collection<global::System.String>), GetXamlTypeByName("Object"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.Collection<global::System.String>),
                                                   "System.Collections.ObjectModel.Collection<String>");
                userType.Activator = Activate_26_Collection;
                userType.CollectionAdd = VectorAdd_26_Collection;
                xamlType = userType;
                break;

            case "SummaryApp.Models.ByteToImageConverter":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::SummaryApp.Models.ByteToImageConverter), GetXamlTypeByName("Object"));
                userType.Activator = Activate_27_ByteToImageConverter;
                xamlType = userType;
                break;

            case "SummaryApp.Page2":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::SummaryApp.Page2), GetXamlTypeByName("SummaryApp.Common.LayoutAwarePage"));
                userType.Activator = Activate_28_Page2;
                xamlType = userType;
                break;

            case "SummaryApp.ViewModels.LineupVM":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::SummaryApp.ViewModels.LineupVM), GetXamlTypeByName("SummaryApp.ViewModels.ObservableObject"));
                userType.Activator = Activate_29_LineupVM;
                userType.AddMemberName("StageList");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.Stage>),
                                                   "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.Stage>");
                userType.AddMemberName("LineUpList");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.LineUp>),
                                                   "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.LineUp>");
                userType.AddMemberName("DateList");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::System.DateTime>),
                                                   "System.Collections.ObjectModel.ObservableCollection<System.DateTime>");
                userType.AddMemberName("SelectedDay");
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.Stage>":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.Stage>), GetXamlTypeByName("System.Collections.ObjectModel.Collection<StoreAppPortLibrary.Stage>"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.Stage>),
                                                   "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.Stage>");
                userType.Activator = Activate_30_ObservableCollection;
                userType.CollectionAdd = VectorAdd_30_ObservableCollection;
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.Collection<StoreAppPortLibrary.Stage>":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.Collection<global::StoreAppPortLibrary.Stage>), GetXamlTypeByName("Object"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.Collection<global::StoreAppPortLibrary.Stage>),
                                                   "System.Collections.ObjectModel.Collection<StoreAppPortLibrary.Stage>");
                userType.Activator = Activate_31_Collection;
                userType.CollectionAdd = VectorAdd_31_Collection;
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.ObservableCollection<System.DateTime>":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.ObservableCollection<global::System.DateTime>), GetXamlTypeByName("System.Collections.ObjectModel.Collection<System.DateTime>"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::System.DateTime>),
                                                   "System.Collections.ObjectModel.ObservableCollection<System.DateTime>");
                userType.Activator = Activate_32_ObservableCollection;
                userType.CollectionAdd = VectorAdd_32_ObservableCollection;
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.Collection<System.DateTime>":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.Collection<global::System.DateTime>), GetXamlTypeByName("Object"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.Collection<global::System.DateTime>),
                                                   "System.Collections.ObjectModel.Collection<System.DateTime>");
                userType.Activator = Activate_33_Collection;
                userType.CollectionAdd = VectorAdd_33_Collection;
                xamlType = userType;
                break;

            case "System.DayOfWeek":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.DayOfWeek), GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Sunday", global::System.DayOfWeek.Sunday);
                userType.AddEnumValue("Monday", global::System.DayOfWeek.Monday);
                userType.AddEnumValue("Tuesday", global::System.DayOfWeek.Tuesday);
                userType.AddEnumValue("Wednesday", global::System.DayOfWeek.Wednesday);
                userType.AddEnumValue("Thursday", global::System.DayOfWeek.Thursday);
                userType.AddEnumValue("Friday", global::System.DayOfWeek.Friday);
                userType.AddEnumValue("Saturday", global::System.DayOfWeek.Saturday);
                xamlType = userType;
                break;

            case "System.Enum":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Enum), GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case "System.DateTimeKind":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.DateTimeKind), GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Unspecified", global::System.DateTimeKind.Unspecified);
                userType.AddEnumValue("Utc", global::System.DateTimeKind.Utc);
                userType.AddEnumValue("Local", global::System.DateTimeKind.Local);
                xamlType = userType;
                break;

            case "TimeSpan":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.TimeSpan), GetXamlTypeByName("System.ValueType"));
                AddToMapOfTypeToStandardName(typeof(global::System.TimeSpan),
                                                   "TimeSpan");
                xamlType = userType;
                break;

            case "SummaryApp.Page3":
                userType = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::SummaryApp.Page3), GetXamlTypeByName("SummaryApp.Common.LayoutAwarePage"));
                userType.Activator = Activate_38_Page3;
                xamlType = userType;
                break;

            }
            return xamlType;
        }


        private object get_0_AgendaVM_LineUpList(object instance)
        {
            var that = (global::SummaryApp.ViewModels.AgendaVM)instance;
            return that.LineUpList;
        }
        private void set_0_AgendaVM_LineUpList(object instance, object Value)
        {
            var that = (global::SummaryApp.ViewModels.AgendaVM)instance;
            that.LineUpList = (global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.LineUp>)Value;
        }
        private object get_1_LineUp_ID(object instance)
        {
            var that = (global::StoreAppPortLibrary.LineUp)instance;
            return that.ID;
        }
        private void set_1_LineUp_ID(object instance, object Value)
        {
            var that = (global::StoreAppPortLibrary.LineUp)instance;
            that.ID = (global::System.Int32)Value;
        }
        private object get_2_LineUp_Date(object instance)
        {
            var that = (global::StoreAppPortLibrary.LineUp)instance;
            return that.Date;
        }
        private void set_2_LineUp_Date(object instance, object Value)
        {
            var that = (global::StoreAppPortLibrary.LineUp)instance;
            that.Date = (global::System.DateTime)Value;
        }
        private object get_3_LineUp_From(object instance)
        {
            var that = (global::StoreAppPortLibrary.LineUp)instance;
            return that.From;
        }
        private void set_3_LineUp_From(object instance, object Value)
        {
            var that = (global::StoreAppPortLibrary.LineUp)instance;
            that.From = (global::System.String)Value;
        }
        private object get_4_LineUp_Until(object instance)
        {
            var that = (global::StoreAppPortLibrary.LineUp)instance;
            return that.Until;
        }
        private void set_4_LineUp_Until(object instance, object Value)
        {
            var that = (global::StoreAppPortLibrary.LineUp)instance;
            that.Until = (global::System.String)Value;
        }
        private object get_5_LineUp_Stage(object instance)
        {
            var that = (global::StoreAppPortLibrary.LineUp)instance;
            return that.Stage;
        }
        private void set_5_LineUp_Stage(object instance, object Value)
        {
            var that = (global::StoreAppPortLibrary.LineUp)instance;
            that.Stage = (global::StoreAppPortLibrary.Stage)Value;
        }
        private object get_6_LineUp_Band(object instance)
        {
            var that = (global::StoreAppPortLibrary.LineUp)instance;
            return that.Band;
        }
        private void set_6_LineUp_Band(object instance, object Value)
        {
            var that = (global::StoreAppPortLibrary.LineUp)instance;
            that.Band = (global::StoreAppPortLibrary.Band)Value;
        }
        private object get_7_AgendaVM_SelectedLineUp(object instance)
        {
            var that = (global::SummaryApp.ViewModels.AgendaVM)instance;
            return that.SelectedLineUp;
        }
        private void set_7_AgendaVM_SelectedLineUp(object instance, object Value)
        {
            var that = (global::SummaryApp.ViewModels.AgendaVM)instance;
            that.SelectedLineUp = (global::StoreAppPortLibrary.LineUp)Value;
        }
        private object get_8_GenresVM_GenreList(object instance)
        {
            var that = (global::SummaryApp.ViewModels.GenresVM)instance;
            return that.GenreList;
        }
        private void set_8_GenresVM_GenreList(object instance, object Value)
        {
            var that = (global::SummaryApp.ViewModels.GenresVM)instance;
            that.GenreList = (global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.Genre>)Value;
        }
        private object get_9_Genre_ID(object instance)
        {
            var that = (global::StoreAppPortLibrary.Genre)instance;
            return that.ID;
        }
        private void set_9_Genre_ID(object instance, object Value)
        {
            var that = (global::StoreAppPortLibrary.Genre)instance;
            that.ID = (global::System.Int32)Value;
        }
        private object get_10_Genre_Name(object instance)
        {
            var that = (global::StoreAppPortLibrary.Genre)instance;
            return that.Name;
        }
        private void set_10_Genre_Name(object instance, object Value)
        {
            var that = (global::StoreAppPortLibrary.Genre)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_11_GenresVM_BandList(object instance)
        {
            var that = (global::SummaryApp.ViewModels.GenresVM)instance;
            return that.BandList;
        }
        private void set_11_GenresVM_BandList(object instance, object Value)
        {
            var that = (global::SummaryApp.ViewModels.GenresVM)instance;
            that.BandList = (global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.Band>)Value;
        }
        private object get_12_Band_ID(object instance)
        {
            var that = (global::StoreAppPortLibrary.Band)instance;
            return that.ID;
        }
        private void set_12_Band_ID(object instance, object Value)
        {
            var that = (global::StoreAppPortLibrary.Band)instance;
            that.ID = (global::System.Int32)Value;
        }
        private object get_13_Band_Name(object instance)
        {
            var that = (global::StoreAppPortLibrary.Band)instance;
            return that.Name;
        }
        private void set_13_Band_Name(object instance, object Value)
        {
            var that = (global::StoreAppPortLibrary.Band)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_14_Band_Picture(object instance)
        {
            var that = (global::StoreAppPortLibrary.Band)instance;
            return that.Picture;
        }
        private void set_14_Band_Picture(object instance, object Value)
        {
            var that = (global::StoreAppPortLibrary.Band)instance;
            that.Picture = (global::System.Byte[])Value;
        }
        private object get_15_Band_Description(object instance)
        {
            var that = (global::StoreAppPortLibrary.Band)instance;
            return that.Description;
        }
        private void set_15_Band_Description(object instance, object Value)
        {
            var that = (global::StoreAppPortLibrary.Band)instance;
            that.Description = (global::System.String)Value;
        }
        private object get_16_Band_Twitter(object instance)
        {
            var that = (global::StoreAppPortLibrary.Band)instance;
            return that.Twitter;
        }
        private void set_16_Band_Twitter(object instance, object Value)
        {
            var that = (global::StoreAppPortLibrary.Band)instance;
            that.Twitter = (global::System.String)Value;
        }
        private object get_17_Band_Facebook(object instance)
        {
            var that = (global::StoreAppPortLibrary.Band)instance;
            return that.Facebook;
        }
        private void set_17_Band_Facebook(object instance, object Value)
        {
            var that = (global::StoreAppPortLibrary.Band)instance;
            that.Facebook = (global::System.String)Value;
        }
        private object get_18_Band_Genres(object instance)
        {
            var that = (global::StoreAppPortLibrary.Band)instance;
            return that.Genres;
        }
        private void set_18_Band_Genres(object instance, object Value)
        {
            var that = (global::StoreAppPortLibrary.Band)instance;
            that.Genres = (global::System.Collections.Generic.List<global::StoreAppPortLibrary.Genre>)Value;
        }
        private object get_19_Band_GenresInText(object instance)
        {
            var that = (global::StoreAppPortLibrary.Band)instance;
            return that.GenresInText;
        }
        private void set_19_Band_GenresInText(object instance, object Value)
        {
            var that = (global::StoreAppPortLibrary.Band)instance;
            that.GenresInText = (global::System.String)Value;
        }
        private object get_20_GenresVM_SelectedGenre(object instance)
        {
            var that = (global::SummaryApp.ViewModels.GenresVM)instance;
            return that.SelectedGenre;
        }
        private void set_20_GenresVM_SelectedGenre(object instance, object Value)
        {
            var that = (global::SummaryApp.ViewModels.GenresVM)instance;
            that.SelectedGenre = (global::StoreAppPortLibrary.Genre)Value;
        }
        private object get_21_GenresVM_SelectedBand(object instance)
        {
            var that = (global::SummaryApp.ViewModels.GenresVM)instance;
            return that.SelectedBand;
        }
        private void set_21_GenresVM_SelectedBand(object instance, object Value)
        {
            var that = (global::SummaryApp.ViewModels.GenresVM)instance;
            that.SelectedBand = (global::StoreAppPortLibrary.Band)Value;
        }
        private object get_22_GenresVM_SelectedPhoto(object instance)
        {
            var that = (global::SummaryApp.ViewModels.GenresVM)instance;
            return that.SelectedPhoto;
        }
        private void set_22_GenresVM_SelectedPhoto(object instance, object Value)
        {
            var that = (global::SummaryApp.ViewModels.GenresVM)instance;
            that.SelectedPhoto = (global::Windows.UI.Xaml.Controls.Image)Value;
        }
        private object get_23_GenresVM_FilteredBands(object instance)
        {
            var that = (global::SummaryApp.ViewModels.GenresVM)instance;
            return that.FilteredBands;
        }
        private void set_23_GenresVM_FilteredBands(object instance, object Value)
        {
            var that = (global::SummaryApp.ViewModels.GenresVM)instance;
            that.FilteredBands = (global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.Band>)Value;
        }
        private object get_24_GenresVM_BandIDsForGenreList(object instance)
        {
            var that = (global::SummaryApp.ViewModels.GenresVM)instance;
            return that.BandIDsForGenreList;
        }
        private void set_24_GenresVM_BandIDsForGenreList(object instance, object Value)
        {
            var that = (global::SummaryApp.ViewModels.GenresVM)instance;
            that.BandIDsForGenreList = (global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.BandGenre>)Value;
        }
        private object get_25_BandGenre_ID(object instance)
        {
            var that = (global::StoreAppPortLibrary.BandGenre)instance;
            return that.ID;
        }
        private void set_25_BandGenre_ID(object instance, object Value)
        {
            var that = (global::StoreAppPortLibrary.BandGenre)instance;
            that.ID = (global::System.Int32)Value;
        }
        private object get_26_BandGenre_Genre(object instance)
        {
            var that = (global::StoreAppPortLibrary.BandGenre)instance;
            return that.Genre;
        }
        private void set_26_BandGenre_Genre(object instance, object Value)
        {
            var that = (global::StoreAppPortLibrary.BandGenre)instance;
            that.Genre = (global::System.Int32)Value;
        }
        private object get_27_BandGenre_Band(object instance)
        {
            var that = (global::StoreAppPortLibrary.BandGenre)instance;
            return that.Band;
        }
        private void set_27_BandGenre_Band(object instance, object Value)
        {
            var that = (global::StoreAppPortLibrary.BandGenre)instance;
            that.Band = (global::System.Int32)Value;
        }
        private object get_28_GenresVM_Links(object instance)
        {
            var that = (global::SummaryApp.ViewModels.GenresVM)instance;
            return that.Links;
        }
        private void set_28_GenresVM_Links(object instance, object Value)
        {
            var that = (global::SummaryApp.ViewModels.GenresVM)instance;
            that.Links = (global::System.Collections.ObjectModel.ObservableCollection<global::System.String>)Value;
        }
        private object get_29_GenresVM_FilteredLineUps(object instance)
        {
            var that = (global::SummaryApp.ViewModels.GenresVM)instance;
            return that.FilteredLineUps;
        }
        private void set_29_GenresVM_FilteredLineUps(object instance, object Value)
        {
            var that = (global::SummaryApp.ViewModels.GenresVM)instance;
            that.FilteredLineUps = (global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.LineUp>)Value;
        }
        private object get_30_LineupVM_StageList(object instance)
        {
            var that = (global::SummaryApp.ViewModels.LineupVM)instance;
            return that.StageList;
        }
        private void set_30_LineupVM_StageList(object instance, object Value)
        {
            var that = (global::SummaryApp.ViewModels.LineupVM)instance;
            that.StageList = (global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.Stage>)Value;
        }
        private object get_31_Stage_ID(object instance)
        {
            var that = (global::StoreAppPortLibrary.Stage)instance;
            return that.ID;
        }
        private void set_31_Stage_ID(object instance, object Value)
        {
            var that = (global::StoreAppPortLibrary.Stage)instance;
            that.ID = (global::System.Int32)Value;
        }
        private object get_32_Stage_Name(object instance)
        {
            var that = (global::StoreAppPortLibrary.Stage)instance;
            return that.Name;
        }
        private void set_32_Stage_Name(object instance, object Value)
        {
            var that = (global::StoreAppPortLibrary.Stage)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_33_Stage_StageLineup(object instance)
        {
            var that = (global::StoreAppPortLibrary.Stage)instance;
            return that.StageLineup;
        }
        private void set_33_Stage_StageLineup(object instance, object Value)
        {
            var that = (global::StoreAppPortLibrary.Stage)instance;
            that.StageLineup = (global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.LineUp>)Value;
        }
        private object get_34_LineupVM_LineUpList(object instance)
        {
            var that = (global::SummaryApp.ViewModels.LineupVM)instance;
            return that.LineUpList;
        }
        private void set_34_LineupVM_LineUpList(object instance, object Value)
        {
            var that = (global::SummaryApp.ViewModels.LineupVM)instance;
            that.LineUpList = (global::System.Collections.ObjectModel.ObservableCollection<global::StoreAppPortLibrary.LineUp>)Value;
        }
        private object get_35_LineupVM_DateList(object instance)
        {
            var that = (global::SummaryApp.ViewModels.LineupVM)instance;
            return that.DateList;
        }
        private void set_35_LineupVM_DateList(object instance, object Value)
        {
            var that = (global::SummaryApp.ViewModels.LineupVM)instance;
            that.DateList = (global::System.Collections.ObjectModel.ObservableCollection<global::System.DateTime>)Value;
        }
        private object get_36_DateTime_Date(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.Date;
        }
        private object get_37_DateTime_Day(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.Day;
        }
        private object get_38_DateTime_DayOfWeek(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.DayOfWeek;
        }
        private object get_39_DateTime_DayOfYear(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.DayOfYear;
        }
        private object get_40_DateTime_Hour(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.Hour;
        }
        private object get_41_DateTime_Kind(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.Kind;
        }
        private object get_42_DateTime_Millisecond(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.Millisecond;
        }
        private object get_43_DateTime_Minute(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.Minute;
        }
        private object get_44_DateTime_Month(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.Month;
        }
        private object get_45_DateTime_Second(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.Second;
        }
        private object get_46_DateTime_Ticks(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.Ticks;
        }
        private object get_47_DateTime_TimeOfDay(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.TimeOfDay;
        }
        private object get_48_DateTime_Year(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.Year;
        }
        private object get_49_LineupVM_SelectedDay(object instance)
        {
            var that = (global::SummaryApp.ViewModels.LineupVM)instance;
            return that.SelectedDay;
        }
        private void set_49_LineupVM_SelectedDay(object instance, object Value)
        {
            var that = (global::SummaryApp.ViewModels.LineupVM)instance;
            that.SelectedDay = (global::System.DateTime)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember xamlMember = null;
            global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "SummaryApp.ViewModels.AgendaVM.LineUpList":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SummaryApp.ViewModels.AgendaVM");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "LineUpList", "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.LineUp>");
                xamlMember.Getter = get_0_AgendaVM_LineUpList;
                xamlMember.Setter = set_0_AgendaVM_LineUpList;
                break;
            case "StoreAppPortLibrary.LineUp.ID":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("StoreAppPortLibrary.LineUp");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "ID", "Int32");
                xamlMember.Getter = get_1_LineUp_ID;
                xamlMember.Setter = set_1_LineUp_ID;
                break;
            case "StoreAppPortLibrary.LineUp.Date":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("StoreAppPortLibrary.LineUp");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Date", "System.DateTime");
                xamlMember.Getter = get_2_LineUp_Date;
                xamlMember.Setter = set_2_LineUp_Date;
                break;
            case "StoreAppPortLibrary.LineUp.From":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("StoreAppPortLibrary.LineUp");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "From", "String");
                xamlMember.Getter = get_3_LineUp_From;
                xamlMember.Setter = set_3_LineUp_From;
                break;
            case "StoreAppPortLibrary.LineUp.Until":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("StoreAppPortLibrary.LineUp");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Until", "String");
                xamlMember.Getter = get_4_LineUp_Until;
                xamlMember.Setter = set_4_LineUp_Until;
                break;
            case "StoreAppPortLibrary.LineUp.Stage":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("StoreAppPortLibrary.LineUp");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Stage", "StoreAppPortLibrary.Stage");
                xamlMember.Getter = get_5_LineUp_Stage;
                xamlMember.Setter = set_5_LineUp_Stage;
                break;
            case "StoreAppPortLibrary.LineUp.Band":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("StoreAppPortLibrary.LineUp");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Band", "StoreAppPortLibrary.Band");
                xamlMember.Getter = get_6_LineUp_Band;
                xamlMember.Setter = set_6_LineUp_Band;
                break;
            case "SummaryApp.ViewModels.AgendaVM.SelectedLineUp":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SummaryApp.ViewModels.AgendaVM");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "SelectedLineUp", "StoreAppPortLibrary.LineUp");
                xamlMember.Getter = get_7_AgendaVM_SelectedLineUp;
                xamlMember.Setter = set_7_AgendaVM_SelectedLineUp;
                break;
            case "SummaryApp.ViewModels.GenresVM.GenreList":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SummaryApp.ViewModels.GenresVM");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "GenreList", "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.Genre>");
                xamlMember.Getter = get_8_GenresVM_GenreList;
                xamlMember.Setter = set_8_GenresVM_GenreList;
                break;
            case "StoreAppPortLibrary.Genre.ID":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("StoreAppPortLibrary.Genre");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "ID", "Int32");
                xamlMember.Getter = get_9_Genre_ID;
                xamlMember.Setter = set_9_Genre_ID;
                break;
            case "StoreAppPortLibrary.Genre.Name":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("StoreAppPortLibrary.Genre");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_10_Genre_Name;
                xamlMember.Setter = set_10_Genre_Name;
                break;
            case "SummaryApp.ViewModels.GenresVM.BandList":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SummaryApp.ViewModels.GenresVM");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "BandList", "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.Band>");
                xamlMember.Getter = get_11_GenresVM_BandList;
                xamlMember.Setter = set_11_GenresVM_BandList;
                break;
            case "StoreAppPortLibrary.Band.ID":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("StoreAppPortLibrary.Band");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "ID", "Int32");
                xamlMember.Getter = get_12_Band_ID;
                xamlMember.Setter = set_12_Band_ID;
                break;
            case "StoreAppPortLibrary.Band.Name":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("StoreAppPortLibrary.Band");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_13_Band_Name;
                xamlMember.Setter = set_13_Band_Name;
                break;
            case "StoreAppPortLibrary.Band.Picture":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("StoreAppPortLibrary.Band");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Picture", "Byte[]");
                xamlMember.Getter = get_14_Band_Picture;
                xamlMember.Setter = set_14_Band_Picture;
                break;
            case "StoreAppPortLibrary.Band.Description":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("StoreAppPortLibrary.Band");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Description", "String");
                xamlMember.Getter = get_15_Band_Description;
                xamlMember.Setter = set_15_Band_Description;
                break;
            case "StoreAppPortLibrary.Band.Twitter":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("StoreAppPortLibrary.Band");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Twitter", "String");
                xamlMember.Getter = get_16_Band_Twitter;
                xamlMember.Setter = set_16_Band_Twitter;
                break;
            case "StoreAppPortLibrary.Band.Facebook":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("StoreAppPortLibrary.Band");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Facebook", "String");
                xamlMember.Getter = get_17_Band_Facebook;
                xamlMember.Setter = set_17_Band_Facebook;
                break;
            case "StoreAppPortLibrary.Band.Genres":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("StoreAppPortLibrary.Band");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Genres", "System.Collections.Generic.List<StoreAppPortLibrary.Genre>");
                xamlMember.Getter = get_18_Band_Genres;
                xamlMember.Setter = set_18_Band_Genres;
                break;
            case "StoreAppPortLibrary.Band.GenresInText":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("StoreAppPortLibrary.Band");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "GenresInText", "String");
                xamlMember.Getter = get_19_Band_GenresInText;
                xamlMember.Setter = set_19_Band_GenresInText;
                break;
            case "SummaryApp.ViewModels.GenresVM.SelectedGenre":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SummaryApp.ViewModels.GenresVM");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "SelectedGenre", "StoreAppPortLibrary.Genre");
                xamlMember.Getter = get_20_GenresVM_SelectedGenre;
                xamlMember.Setter = set_20_GenresVM_SelectedGenre;
                break;
            case "SummaryApp.ViewModels.GenresVM.SelectedBand":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SummaryApp.ViewModels.GenresVM");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "SelectedBand", "StoreAppPortLibrary.Band");
                xamlMember.Getter = get_21_GenresVM_SelectedBand;
                xamlMember.Setter = set_21_GenresVM_SelectedBand;
                break;
            case "SummaryApp.ViewModels.GenresVM.SelectedPhoto":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SummaryApp.ViewModels.GenresVM");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "SelectedPhoto", "Windows.UI.Xaml.Controls.Image");
                xamlMember.Getter = get_22_GenresVM_SelectedPhoto;
                xamlMember.Setter = set_22_GenresVM_SelectedPhoto;
                break;
            case "SummaryApp.ViewModels.GenresVM.FilteredBands":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SummaryApp.ViewModels.GenresVM");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "FilteredBands", "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.Band>");
                xamlMember.Getter = get_23_GenresVM_FilteredBands;
                xamlMember.Setter = set_23_GenresVM_FilteredBands;
                break;
            case "SummaryApp.ViewModels.GenresVM.BandIDsForGenreList":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SummaryApp.ViewModels.GenresVM");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "BandIDsForGenreList", "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.BandGenre>");
                xamlMember.Getter = get_24_GenresVM_BandIDsForGenreList;
                xamlMember.Setter = set_24_GenresVM_BandIDsForGenreList;
                break;
            case "StoreAppPortLibrary.BandGenre.ID":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("StoreAppPortLibrary.BandGenre");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "ID", "Int32");
                xamlMember.Getter = get_25_BandGenre_ID;
                xamlMember.Setter = set_25_BandGenre_ID;
                break;
            case "StoreAppPortLibrary.BandGenre.Genre":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("StoreAppPortLibrary.BandGenre");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Genre", "Int32");
                xamlMember.Getter = get_26_BandGenre_Genre;
                xamlMember.Setter = set_26_BandGenre_Genre;
                break;
            case "StoreAppPortLibrary.BandGenre.Band":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("StoreAppPortLibrary.BandGenre");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Band", "Int32");
                xamlMember.Getter = get_27_BandGenre_Band;
                xamlMember.Setter = set_27_BandGenre_Band;
                break;
            case "SummaryApp.ViewModels.GenresVM.Links":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SummaryApp.ViewModels.GenresVM");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Links", "System.Collections.ObjectModel.ObservableCollection<String>");
                xamlMember.Getter = get_28_GenresVM_Links;
                xamlMember.Setter = set_28_GenresVM_Links;
                break;
            case "SummaryApp.ViewModels.GenresVM.FilteredLineUps":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SummaryApp.ViewModels.GenresVM");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "FilteredLineUps", "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.LineUp>");
                xamlMember.Getter = get_29_GenresVM_FilteredLineUps;
                xamlMember.Setter = set_29_GenresVM_FilteredLineUps;
                break;
            case "SummaryApp.ViewModels.LineupVM.StageList":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SummaryApp.ViewModels.LineupVM");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "StageList", "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.Stage>");
                xamlMember.Getter = get_30_LineupVM_StageList;
                xamlMember.Setter = set_30_LineupVM_StageList;
                break;
            case "StoreAppPortLibrary.Stage.ID":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("StoreAppPortLibrary.Stage");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "ID", "Int32");
                xamlMember.Getter = get_31_Stage_ID;
                xamlMember.Setter = set_31_Stage_ID;
                break;
            case "StoreAppPortLibrary.Stage.Name":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("StoreAppPortLibrary.Stage");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_32_Stage_Name;
                xamlMember.Setter = set_32_Stage_Name;
                break;
            case "StoreAppPortLibrary.Stage.StageLineup":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("StoreAppPortLibrary.Stage");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "StageLineup", "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.LineUp>");
                xamlMember.Getter = get_33_Stage_StageLineup;
                xamlMember.Setter = set_33_Stage_StageLineup;
                break;
            case "SummaryApp.ViewModels.LineupVM.LineUpList":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SummaryApp.ViewModels.LineupVM");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "LineUpList", "System.Collections.ObjectModel.ObservableCollection<StoreAppPortLibrary.LineUp>");
                xamlMember.Getter = get_34_LineupVM_LineUpList;
                xamlMember.Setter = set_34_LineupVM_LineUpList;
                break;
            case "SummaryApp.ViewModels.LineupVM.DateList":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SummaryApp.ViewModels.LineupVM");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "DateList", "System.Collections.ObjectModel.ObservableCollection<System.DateTime>");
                xamlMember.Getter = get_35_LineupVM_DateList;
                xamlMember.Setter = set_35_LineupVM_DateList;
                break;
            case "System.DateTime.Date":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Date", "System.DateTime");
                xamlMember.Getter = get_36_DateTime_Date;
                xamlMember.SetIsReadOnly();
                break;
            case "System.DateTime.Day":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Day", "Int32");
                xamlMember.Getter = get_37_DateTime_Day;
                xamlMember.SetIsReadOnly();
                break;
            case "System.DateTime.DayOfWeek":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "DayOfWeek", "System.DayOfWeek");
                xamlMember.Getter = get_38_DateTime_DayOfWeek;
                xamlMember.SetIsReadOnly();
                break;
            case "System.DateTime.DayOfYear":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "DayOfYear", "Int32");
                xamlMember.Getter = get_39_DateTime_DayOfYear;
                xamlMember.SetIsReadOnly();
                break;
            case "System.DateTime.Hour":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Hour", "Int32");
                xamlMember.Getter = get_40_DateTime_Hour;
                xamlMember.SetIsReadOnly();
                break;
            case "System.DateTime.Kind":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Kind", "System.DateTimeKind");
                xamlMember.Getter = get_41_DateTime_Kind;
                xamlMember.SetIsReadOnly();
                break;
            case "System.DateTime.Millisecond":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Millisecond", "Int32");
                xamlMember.Getter = get_42_DateTime_Millisecond;
                xamlMember.SetIsReadOnly();
                break;
            case "System.DateTime.Minute":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Minute", "Int32");
                xamlMember.Getter = get_43_DateTime_Minute;
                xamlMember.SetIsReadOnly();
                break;
            case "System.DateTime.Month":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Month", "Int32");
                xamlMember.Getter = get_44_DateTime_Month;
                xamlMember.SetIsReadOnly();
                break;
            case "System.DateTime.Second":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Second", "Int32");
                xamlMember.Getter = get_45_DateTime_Second;
                xamlMember.SetIsReadOnly();
                break;
            case "System.DateTime.Ticks":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Ticks", "Int64");
                xamlMember.Getter = get_46_DateTime_Ticks;
                xamlMember.SetIsReadOnly();
                break;
            case "System.DateTime.TimeOfDay":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "TimeOfDay", "TimeSpan");
                xamlMember.Getter = get_47_DateTime_TimeOfDay;
                xamlMember.SetIsReadOnly();
                break;
            case "System.DateTime.Year":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "Year", "Int32");
                xamlMember.Getter = get_48_DateTime_Year;
                xamlMember.SetIsReadOnly();
                break;
            case "SummaryApp.ViewModels.LineupVM.SelectedDay":
                userType = (global::SummaryApp.SummaryApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SummaryApp.ViewModels.LineupVM");
                xamlMember = new global::SummaryApp.SummaryApp_XamlTypeInfo.XamlMember(this, "SelectedDay", "System.DateTime");
                xamlMember.Getter = get_49_LineupVM_SelectedDay;
                xamlMember.Setter = set_49_LineupVM_SelectedDay;
                break;
            }
            return xamlMember;
        }

    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(global::System.String input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::SummaryApp.SummaryApp_XamlTypeInfo.XamlSystemBaseType
    {
        global::SummaryApp.SummaryApp_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::SummaryApp.SummaryApp_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public global::System.Object CreateFromString(global::System.String input)
        {
            if (_enumValues != null)
            {
                global::System.Int32 value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    global::System.Int32 enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( global::System.String.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::SummaryApp.SummaryApp_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::SummaryApp.SummaryApp_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(global::System.String targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}


